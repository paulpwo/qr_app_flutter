name: 📱 Build Production APK

on:
  push:
    branches: [ main ]
    tags:
      - 'v*' # Para versiones taggeadas
  pull_request:
    branches: [ main ]

# Add concurrency configuration
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'

    - name: 📦 Install Melos
      run: dart pub global activate melos
    
    - name: 📥 Install dependencies
      run: |
        flutter pub get
        melos bootstrap
    
    - name: 🧪 Run tests
      id: tests
      run: melos run test

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'

    # Cache Pub dependencies
    - name: 💾 Cache Pub dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.PUB_CACHE }}
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: ${{ runner.os }}-pub-

    # Cache Gradle dependencies
    - name: 💾 Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-
    
    - name: 📦 Install Melos
      run: dart pub global activate melos
    
    - name: 📥 Install dependencies
      run: |
        flutter pub get
        melos bootstrap
    
    - name: 🔨 Build Production APK
      run: flutter build apk --flavor production --release
    
    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: production-apk
        path: build/app/outputs/flutter-apk/app-production-release.apk
        retention-days: 7

  release:
    needs: build
    if: github.ref == 'refs/heads/main' # Solo en main
    runs-on: ubuntu-latest
    permissions: # Agregar permisos explícitos
      contents: write
      discussions: write
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/download-artifact@v4
        with:
          name: production-apk
          
      - name: 📅 Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: 🏷️ Create Tag
        run: |
          git tag release-${{ steps.date.outputs.date }}
          git push origin release-${{ steps.date.outputs.date }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📦 Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ steps.date.outputs.date }}
          name: Release ${{ steps.date.outputs.date }}
          files: app-production-release.apk
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
